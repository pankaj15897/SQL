CREATE DATABASE sql_class3;
USE sql_class3;

CREATE Table if not exists employee(
    id int,
    name VARCHAR(50),
    age int,
    hiring_date date,
    salary int,
    city VARCHAR(50)
);

INSERT into employee VALUES(1,"Pankaj",26,"2021-06-01",100000,"Pune");
INSERT into employee VALUES(2,"Nikhil",27,"2021-06-02",100000,"Mumbai");
INSERT into employee VALUES(3,"Amit",28,"2021-06-03",100000,"Pune");
INSERT into employee VALUES(4,"Radhe",24,"2021-06-04",120000,"Banglore");
INSERT into employee VALUES(5,"Kalpesh",25,"2021-06-05",130000,"Nagar");
INSERT into employee VALUES(1,"Akash",30,"2021-06-06",140000,"Delhi");

----------------------------------------
--below is the process to save updated changes in the table
-- set SQL_SAFE_UPDATES = 0;
--UPDATE ...
--COMMIT;
---------------------------------------
update employee set age=20,salary=250000 WHERE hiring_date = '2021-06-06';
SELECT * from employee;

CREATE Table auto_incr_exm(
    id int AUTO_INCREMENT,
    name VARCHAR(20),
    PRIMARY KEY (id)
);

INSERT into auto_incr_exm(name) VALUES('Pankaj');
INSERT into auto_incr_exm(name) VALUES('Ganesh');
INSERT into auto_incr_exm(name) VALUES('Kumar');
SELECT * from auto_incr_exm;

--limit rows
select * from employee LIMIT 2;
--sorting data by using 'order by'
select * from employee ORDER BY name;
select * from employee ORDER BY name desc;
--displav data in desc order if multiple employee have same salary then arrange their data in asc order of NAME
select * from employee ORDER BY salary desc,name asc;

select * from employee ORDER BY salary desc limit 1;
----------------------------------------------------------------
--list all employee getting salaruies greater than 100000
SELECT * from employee WHERE salary > 100000;
SELECT * from employee WHERE age = 20;
SELECT * from employee WHERE age != 20;
SELECT * from employee WHERE age <> 20;
SELECT * from employee where hiring_date = '2021-06-03' and salary = 100000;
--How to use like operation in where clause
-- % -> zero,one or more than 1 CHAR
-- _ -> only one CHAR
SELECT * from employee WHERE name LIKE 'P%';
SELECT * from employee WHERE name LIKE '%h';
SELECT * from employee WHERE name LIKE '_____';
--How to use is NULL OR IS NOT NULL IN THE WHERE CLAUSE
INSERT into employee values(10,'Kumar',22,null,100000,'Salgara');
select * from employee where hiring_date is null;

--Group By--
CREATE Table orders(
    cust_id int,
    order_id int,
    country VARCHAR(50),
    state VARCHAR(50)
);

INSERT into orders VALUES(1,100,'USA','Seattle');
INSERT into orders VALUES(2,101,'INDIA','Seattle');
INSERT into orders VALUES(3,102,'USA','WDC');
INSERT into orders VALUES(2,103,'INDIA','UP');
INSERT into orders VALUES(5,104,'USA','Seattle');
INSERT into orders VALUES(4,110,'UK','London');
INSERT into orders VALUES(16,120,'INDIA','Maharashtra');
INSERT into orders VALUES(4,109,'INDIA','Bihar');
select country,order_id,count(*) as order_count from orders GROUP BY country;

select age, sum(salary) as total_salary_By_age from employee GROUP BY age;
